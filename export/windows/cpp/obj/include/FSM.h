// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#ifndef INCLUDED_FSM
#define INCLUDED_FSM

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_fafc4564ec95dc87_13_new)
HX_DECLARE_CLASS0(FSM)



class HXCPP_CLASS_ATTRIBUTES FSM_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef FSM_obj OBJ_;
		FSM_obj();

	public:
		enum { _hx_ClassId = 0x00356660 };

		void __construct( ::Dynamic InitState);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="FSM")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"FSM"); }

		hx::ObjectPtr< FSM_obj > __new( ::Dynamic InitState) {
			hx::ObjectPtr< FSM_obj > __this = new FSM_obj();
			__this->__construct(InitState);
			return __this;
		}

		static hx::ObjectPtr< FSM_obj > __alloc(hx::Ctx *_hx_ctx, ::Dynamic InitState) {
			FSM_obj *__this = (FSM_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(FSM_obj), true, "FSM"));
			*(void **)__this = FSM_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_fafc4564ec95dc87_13_new)
HXDLIN(  13)		( ( ::FSM)(__this) )->activeState = InitState;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~FSM_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("FSM","\x60","\x66","\x35","\x00"); }

		 ::Dynamic activeState;
		Dynamic activeState_dyn() { return activeState;}
		void update();
		::Dynamic update_dyn();

};


#endif /* INCLUDED_FSM */ 
